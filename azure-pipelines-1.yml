# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    # version: 6.0.416
    version: 6.x
    packageType: sdk
    performMultiLevelLookup: true
    includePreviewVersions: true # Required for preview versions

# - task: UseDotNet@2
#   inputs:
#     version: '6.x'
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.sln'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    workingDirectory: RumexStore.Service
  displayName: 'dotnet build $(buildConfiguration)'

# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    # arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
    testRunTitle: 'xUNit Test Run'
# - task: VSTest@2
#   inputs:
#     testSelector: 'testAssemblies'
#     testAssemblyVer2: '**\*test*.dll,!**\*TestAdapter.dll,!**\obj\**'
#     searchFolder: '$(System.DefaultWorkingDirectory)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

  #  searchFolder: '$(System.DefaultWorkingDirectory)'
  #   platform: '$(buildPlatform)'
  #   configuration: '$(buildConfiguration)'
# - script: dotnet test
#   # workingDirectory: backend
#   displayName: 'backend tests'
- script: dotnet test RumexStore.Dal.Tests.csproj
  # workingDirectory: RumexStore.Dal.Tests
  # displayName: 'Rumex Store Dal Tests'
