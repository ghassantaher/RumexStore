# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
      # - script: echo Hello
      # - script: echo $(Build.Reason)
      # - script: echo $(Build.SourceBranch)
      # - script: echo WorkFolder - 
      # - script: tree $(Agent.WorkFolder)
      # - script: echo DefaultWorkingDirectory - 
      # - script: tree $(System.DefaultWorkingDirectory)
      # - script: cd rumexstore-angular      
      # - script: echo WorkFolder - 
      # - script: tree $(Agent.WorkFolder)
      # - script: echo DefaultWorkingDirectory - 
      # - script: tree $(System.DefaultWorkingDirectory)
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
        displayName: 'Install Node.js 18.x'
      - task: CmdLine@2
        inputs:
          script: |
            echo  '$(System.DefaultWorkingDirectory)'
            echo ----
            dir
      - script: tree $(System.DefaultWorkingDirectory)/rumexstore-angular/
      - script: |
          cd rumexstore-angular/
          echo ----
          dir
          npm install -g @angular/cli
          echo ----
          dir
          npm install
          echo ----
          dir
          ng build --configuration=production
          echo ----
          dir
        displayName: 'npm install and build'
        workingDirectory: '$(Build.SourcesDirectory)'
      # - script: echo -----
      #     dir $(System.DefaultWorkingDirectory)
      #     echo -----
      #     dir $(System.DefaultWorkingDirectory)/dist/
      # - task: CmdLine@2
      #   displayName: "Run unit tests"
      #   inputs:
      #     script: |
      #       cd rumexstore-angular/
      #       ng test --browsers=ChromeHeadless --code-coverage --watch=false
      # - script: tree $(System.DefaultWorkingDirectory)/
      # - powershell: Get-ChildItem -Path $(System.DefaultWorkingDirectory)\*.* -recurse
      - script: tree $(System.DefaultWorkingDirectory)/rumexstore-angular/dist/
      - script: tree $(System.DefaultWorkingDirectory)/rumexstore-angular/dist/rumexstore-angular/
      # - script: tree $(System.DefaultWorkingDirectory)/dist/
      # - powershell: Get-ChildItem -Path $(System.DefaultWorkingDirectory)\*.* -recurse
      - powershell: Get-ChildItem -Path $(System.DefaultWorkingDirectory)/rumexstore-angular/dist/rumexstore-angular\*.* -recurse

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/rumexstore-angular/dist/rumexstore-angular/'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: 'frontend-production'
          # publishLocation: 'Container'